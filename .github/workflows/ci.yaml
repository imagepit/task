name: ci
on:
  push:
    branches:
      - master

env:
  EC2_USER: 'ubuntu'
  EC2_HOST: ${{ secrets.EC2_HOST }}
  SRC_PATH: 'build/libs/demo-0.0.1-SNAPSHOT.jar'
  DEST_DIR: '/var/apps'
  APP_NAME: 'sboot'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Test with Gradle
        run: chmod +x gradlew && ./gradlew test
      - name: save test reports as artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-reports
          path: build/reports/tests/test
      - name: Build with Gradle
        run: ./gradlew build
      - name: save build artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-artifact
          path: build/libs/task-0.0.1-SNAPSHOT.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: build/libs
    - name: SCPを使ってEC2にファイルを転送
      env:
        PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -i private_key build/libs/task-0.0.1-SNAPSHOT.jar ${EC2_USER}@${EC2_HOST}:${DEST_DIR}/app.jar
    - name: SSHを使ってEC2にデプロイ
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        envs: APP_NAME
        script: sudo systemctl restart $APP_NAME